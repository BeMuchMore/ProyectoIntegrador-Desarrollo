/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UX;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import UI.ProductoDAO;
import UI.Producto;
import java.util.ArrayList;
import java.util.List;
import UI.Conexion;
import UI.ConfigImagenes;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.awt.Component;
import javax.swing.JCheckBox;
import javax.swing.ImageIcon;
import java.awt.Image;

import UI.SessionManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;



/**
 *
 * @author calam
 */
public class Agregar extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Agregar.class.getName());

    private ProductoDAO productoDAO;
    private String imagenUrlSeleccionada = "";
private static final String CARPETA_IMAGENES = "...Z-Global-Img/";
   
    public Agregar() {
        
        if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Debes iniciar sesión primero");
            this.dispose();
            return;
        }
       
        initComponents();
         configurarVentana();
         
        this.productoDAO = new ProductoDAO();
    
    // Configurar campos con texto placeholder
    configurarCampos();
    }
    
    private void configurarCampos() {
    jColorText.setText(""); // Color - limpiar el texto de prueba
    jMaterialText.setText(""); // Material - limpiar el texto de prueba  
    jColeccionText.setText(""); // Colección - limpiar el texto de prueba
    
    // Configurar placeholders
    jColorText.setToolTipText("Ingrese el color del producto");
    jMaterialText.setToolTipText("Ingrese el material del producto");
    jColeccionText.setToolTipText("Ingrese la colección del producto");
}
    
    private void configurarVentana() {
        setResizable(false);
        setLocationRelativeTo(null);
        
        // Configurar título con información del usuario
        SessionManager session = SessionManager.getInstance();
        this.setTitle("Agregar Productos - Usuario: " + session.getUsername());
        
        // Log de acceso
        System.out.println("Usuario " + session.getUsername() + " accedió a Agregar Productos");
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        jRadioButton1 = new javax.swing.JRadioButton();
        jDialog1 = new javax.swing.JDialog();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jUsuarioButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jNombreText = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCantidadText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jBlusasTopsCheckBox1 = new javax.swing.JCheckBox();
        jPantalonesCheckBox2 = new javax.swing.JCheckBox();
        jVestidosCheckBox3 = new javax.swing.JCheckBox();
        jCalzadoCheckBox4 = new javax.swing.JCheckBox();
        jAccesoriosCheckBox5 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jTallaXSCheckBox = new javax.swing.JCheckBox();
        jTallaXLCheckBox = new javax.swing.JCheckBox();
        jTalla32CheckBox = new javax.swing.JCheckBox();
        jTalla38CheckBox = new javax.swing.JCheckBox();
        jTallaUnicaCheckBox = new javax.swing.JCheckBox();
        jTallaSCheckBox = new javax.swing.JCheckBox();
        jTalla26CheckBox = new javax.swing.JCheckBox();
        jTalla34CheckBox = new javax.swing.JCheckBox();
        jTalla39CheckBox = new javax.swing.JCheckBox();
        jTallar40CheckBo = new javax.swing.JCheckBox();
        jTallaMCheckBox = new javax.swing.JCheckBox();
        jTalla28CheckBox = new javax.swing.JCheckBox();
        jTalla36CheckBox = new javax.swing.JCheckBox();
        jTalla37CheckBox = new javax.swing.JCheckBox();
        jTalla41CheckBox = new javax.swing.JCheckBox();
        jTallaLCheckBox = new javax.swing.JCheckBox();
        jTalla30CheckBox = new javax.swing.JCheckBox();
        jSubirImgButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPrecioText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jColorText = new javax.swing.JTextField();
        jMaterialText = new javax.swing.JTextField();
        jColeccionText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jAgrgarProductoButton = new javax.swing.JButton();
        LimpiarProductoButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDescripcionText = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jAgregarButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jEliminarButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jActualizarButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLeerButton = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1067, 536));
        jPanel1.setMinimumSize(new java.awt.Dimension(1067, 536));

        jUsuarioButton.setText("Usuario");
        jUsuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsuarioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jUsuarioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jUsuarioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(949, 391));
        jPanel4.setMinimumSize(new java.awt.Dimension(949, 391));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel11.setText("AGREGAR PRODUCTOS");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jNombreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNombreTextActionPerformed(evt);
            }
        });
        jPanel4.add(jNombreText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 229, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Nombre:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Imagen:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Precio:");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Categoria:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 91, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Cantidad:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));
        jPanel4.add(jCantidadText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 229, -1));

        jBlusasTopsCheckBox1.setText("Blusas & Tops");

        jPantalonesCheckBox2.setText("Pantalones");

        jVestidosCheckBox3.setText("Vestidos");

        jCalzadoCheckBox4.setText("Calzado");

        jAccesoriosCheckBox5.setText("Accesorios");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAccesoriosCheckBox5)
                    .addComponent(jPantalonesCheckBox2)
                    .addComponent(jVestidosCheckBox3)
                    .addComponent(jCalzadoCheckBox4)
                    .addComponent(jBlusasTopsCheckBox1))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBlusasTopsCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jAccesoriosCheckBox5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPantalonesCheckBox2)
                .addGap(1, 1, 1)
                .addComponent(jVestidosCheckBox3)
                .addGap(5, 5, 5)
                .addComponent(jCalzadoCheckBox4))
        );

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 88, 170, 130));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Talla:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, -1, -1));

        jTallaXSCheckBox.setText("XS");

        jTallaXLCheckBox.setText("XL");

        jTalla32CheckBox.setText("32");

        jTalla38CheckBox.setText("38");

        jTallaUnicaCheckBox.setText("Talla Única");

        jTallaSCheckBox.setText("S");

        jTalla26CheckBox.setText("26");

        jTalla34CheckBox.setText("34");

        jTalla39CheckBox.setText("39");

        jTallar40CheckBo.setText("40");

        jTallaMCheckBox.setText("M");

        jTalla28CheckBox.setText("28");

        jTalla36CheckBox.setText("36");

        jTalla37CheckBox.setText("37");

        jTalla41CheckBox.setText("41");

        jTallaLCheckBox.setText("L");

        jTalla30CheckBox.setText("30");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTallaXSCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaSCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaMCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaLCheckBox))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTallaXLCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla26CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla28CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla30CheckBox))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTalla32CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla34CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla36CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla37CheckBox))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTalla38CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla39CheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallar40CheckBo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTalla41CheckBox))
                    .addComponent(jTallaUnicaCheckBox))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTallaXSCheckBox)
                    .addComponent(jTallaSCheckBox)
                    .addComponent(jTallaMCheckBox)
                    .addComponent(jTallaLCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTallaXLCheckBox)
                    .addComponent(jTalla26CheckBox)
                    .addComponent(jTalla28CheckBox)
                    .addComponent(jTalla30CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTalla32CheckBox)
                    .addComponent(jTalla34CheckBox)
                    .addComponent(jTalla36CheckBox)
                    .addComponent(jTalla37CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTalla38CheckBox)
                    .addComponent(jTalla39CheckBox)
                    .addComponent(jTallar40CheckBo)
                    .addComponent(jTalla41CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTallaUnicaCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 230, 170, 130));

        jSubirImgButton.setText("Subir Imagen");
        jSubirImgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubirImgButtonActionPerformed(evt);
            }
        });
        jPanel4.add(jSubirImgButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 110, -1));

        jLabel4.setText("Url");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, -1, -1));
        jPanel4.add(jPrecioText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 230, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jLabel3.setText("puedes seleccionar varias");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, -1, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Color:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));
        jPanel4.add(jColorText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 230, -1));
        jPanel4.add(jMaterialText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 230, -1));
        jPanel4.add(jColeccionText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 230, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Material:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Coleccion:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        jAgrgarProductoButton.setText("Subir");
        jAgrgarProductoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgrgarProductoButtonActionPerformed(evt);
            }
        });
        jPanel4.add(jAgrgarProductoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 130, 90));

        LimpiarProductoButton.setText("Limpiar");
        LimpiarProductoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarProductoButtonActionPerformed(evt);
            }
        });
        jPanel4.add(LimpiarProductoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, 140, 110));

        jDescripcionText.setColumns(20);
        jDescripcionText.setRows(5);
        jScrollPane1.setViewportView(jDescripcionText);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 390, -1, -1));

        jLabel8.setText("Descripcion");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        jPanel5.setMaximumSize(new java.awt.Dimension(100, 100));

        jAgregarButton.setText("Agregar");
        jAgregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgregarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jAgregarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jAgregarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel6.setMaximumSize(new java.awt.Dimension(100, 100));

        jEliminarButton.setText("Eliminar");
        jEliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jEliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jEliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel7.setMaximumSize(new java.awt.Dimension(100, 100));

        jActualizarButton.setText("Actualizar");
        jActualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualizarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jActualizarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jActualizarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel8.setMaximumSize(new java.awt.Dimension(100, 100));

        jLeerButton.setText("Leer");
        jLeerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLeerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLeerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLeerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAgregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgregarButtonActionPerformed
        // TODO add your handling code here:
        
//             Agregar temp = new Agregar();
//            temp.setVisible(true);
//            this.setVisible(false);
    }//GEN-LAST:event_jAgregarButtonActionPerformed

    private void jEliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarButtonActionPerformed
        // TODO add your handling code here:
         if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesión no válida");
            return;
        }
        
        Eliminar temp = new Eliminar();
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jEliminarButtonActionPerformed

    private void jActualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualizarButtonActionPerformed
        // TODO add your handling code here:
        if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesión no válida");
            return;
        }
        
        Actualizar temp = new Actualizar();
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jActualizarButtonActionPerformed

    private void jLeerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLeerButtonActionPerformed
        // TODO add your handling code here:
        if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesión no válida");
            return;
        }
        
        Leer temp = new Leer();
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLeerButtonActionPerformed

    private void jUsuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsuarioButtonActionPerformed
        // TODO add your handling code here:
       SessionManager session = SessionManager.getInstance();
        
        if (!session.isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesión no válida");
            return;
        }
        
        // Obtener datos de la sesión
        int userId = session.getUserId();
        String cargo = session.getCargo();
        
        System.out.println("Navegando a Usuario con datos: ID=" + userId + ", Cargo=" + cargo);
        
        Usuario temp = new Usuario(userId, cargo);
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jUsuarioButtonActionPerformed

    private void jNombreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNombreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNombreTextActionPerformed
    
        
        
    private void jAgrgarProductoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgrgarProductoButtonActionPerformed
        // TODO add your handling code here:
        SessionManager session = SessionManager.getInstance();
    if (!session.isLoggedIn()) {
        JOptionPane.showMessageDialog(this, "Sesión no válida");
        return;
    }
    
    try {
        // Validar campos obligatorios
        if (!validarCampos()) {
            return;
        }
        
        // Crear objeto producto con los datos del formulario
        Producto producto = crearProductoDesdeFormulario();
        
        // Insertar producto en la base de datos
        if (productoDAO.insertarProducto(producto)) {
            JOptionPane.showMessageDialog(this, 
                "Producto agregado correctamente: " + producto.getNombre(),
                "Éxito", 
                JOptionPane.INFORMATION_MESSAGE);
            
            // Limpiar formulario después de insertar
            limpiarFormulario();
            
            // Log de la acción
            System.out.println("Usuario " + session.getUsername() + 
                             " agregó producto: " + producto.getNombre());
        } else {
            JOptionPane.showMessageDialog(this,
                "Error al agregar el producto. Verifique los datos e intente nuevamente.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this,
            "Error inesperado: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
        logger.log(java.util.logging.Level.SEVERE, "Error al agregar producto", e);
    }

        
    }//GEN-LAST:event_jAgrgarProductoButtonActionPerformed

    
    private boolean validarCampos() {
    StringBuilder errores = new StringBuilder();
    
    // Validar nombre
    if (jNombreText.getText().trim().isEmpty()) {
        errores.append("- El nombre es obligatorio\n");
    }
    
    // Validar precio
    String precioTexto = jPrecioText.getText().trim();
    if (precioTexto.isEmpty()) {
        errores.append("- El precio es obligatorio\n");
    } else {
        try {
            double precio = Double.parseDouble(precioTexto);
            if (precio < 0) {
                errores.append("- El precio debe ser mayor o igual a 0\n");
            }
        } catch (NumberFormatException e) {
            errores.append("- El precio debe ser un número válido\n");
        }
    }
    
    // Validar cantidad
    String cantidadTexto = jCantidadText.getText().trim();
    if (cantidadTexto.isEmpty()) {
        errores.append("- La cantidad es obligatoria\n");
    } else {
        try {
            int cantidad = Integer.parseInt(cantidadTexto);
            if (cantidad < 0) {
                errores.append("- La cantidad debe ser mayor o igual a 0\n");
            }
        } catch (NumberFormatException e) {
            errores.append("- La cantidad debe ser un número entero válido\n");
        }
    }
    
    // Validar que al menos una categoría esté seleccionada
    if (!tieneCategoriasSeleccionadas()) {
        errores.append("- Debe seleccionar al menos una categoría\n");
    }
    
    // Validar que al menos una talla esté seleccionada
    if (!tieneTallasSeleccionadas()) {
        errores.append("- Debe seleccionar al menos una talla\n");
    }
    
    // Mostrar errores si los hay
    if (errores.length() > 0) {
        JOptionPane.showMessageDialog(this,
            "Por favor corrija los siguientes errores:\n\n" + errores.toString(),
            "Errores de validación",
            JOptionPane.WARNING_MESSAGE);
        return false;
    }
    
    return true;
}

// Método para verificar si hay categorías seleccionadas
private boolean tieneCategoriasSeleccionadas() {
    return jBlusasTopsCheckBox1.isSelected() ||
           jPantalonesCheckBox2.isSelected() ||
           jVestidosCheckBox3.isSelected() ||
           jCalzadoCheckBox4.isSelected() ||
           jAccesoriosCheckBox5.isSelected();
}

// Método para verificar si hay tallas seleccionadas
private boolean tieneTallasSeleccionadas() {
    return jTallaXSCheckBox.isSelected() || jTallaSCheckBox.isSelected() ||
           jTallaMCheckBox.isSelected() || jTallaLCheckBox.isSelected() ||
           jTallaXLCheckBox.isSelected() || jTalla26CheckBox.isSelected() ||
           jTalla28CheckBox.isSelected() || jTalla30CheckBox.isSelected() ||
           jTalla32CheckBox.isSelected() || jTalla34CheckBox.isSelected() ||
           jTalla36CheckBox.isSelected() || jTalla37CheckBox.isSelected() ||
           jTalla38CheckBox.isSelected() || jTalla39CheckBox.isSelected() ||
           jTallar40CheckBo.isSelected() || jTalla41CheckBox.isSelected() ||
           jTallaUnicaCheckBox.isSelected();
}

// Método para crear producto desde los datos del formulario
private Producto crearProductoDesdeFormulario() {
    Producto producto = new Producto();
    
    // Datos básicos
    producto.setNombre(jNombreText.getText().trim());
    
    // IMPORTANTE: Usar la ruta relativa para la base de datos
    // No usar rutas absolutas que incluyan C:\Users\...
    producto.setImgUrl(imagenUrlSeleccionada.isEmpty() ? "" : imagenUrlSeleccionada);
    
    producto.setCantidad(Integer.parseInt(jCantidadText.getText().trim()));
    producto.setDescripcion(jDescripcionText.getText().trim());
    producto.setPrecio(Double.parseDouble(jPrecioText.getText().trim()));
    producto.setColor(jColorText.getText().trim());
    producto.setMaterial(jMaterialText.getText().trim());
    producto.setColeccion(jColeccionText.getText().trim());
    
    // Obtener categorías seleccionadas
    producto.setCategorias(obtenerCategoriasSeleccionadas());
    
    // Obtener tallas seleccionadas
    producto.setTalla(obtenerTallasSeleccionadas());
    
    // Log para verificar que se está guardando la ruta correcta
    System.out.println("Producto creado con imagen: " + producto.getImgUrl());
    
    return producto;
}

// Método para obtener categorías seleccionadas como string
private String obtenerCategoriasSeleccionadas() {
    List<String> categorias = new ArrayList<>();
    
    if (jBlusasTopsCheckBox1.isSelected()) categorias.add("Blusas & Tops");
    if (jPantalonesCheckBox2.isSelected()) categorias.add("Pantalones");
    if (jVestidosCheckBox3.isSelected()) categorias.add("Vestidos");
    if (jCalzadoCheckBox4.isSelected()) categorias.add("Calzado");
    if (jAccesoriosCheckBox5.isSelected()) categorias.add("Accesorios");
    
    return String.join(", ", categorias);
}

// Método para obtener tallas seleccionadas como string
private String obtenerTallasSeleccionadas() {
    List<String> tallas = new ArrayList<>();
    
    if (jTallaXSCheckBox.isSelected()) tallas.add("XS");
    if (jTallaSCheckBox.isSelected()) tallas.add("S");
    if (jTallaMCheckBox.isSelected()) tallas.add("M");
    if (jTallaLCheckBox.isSelected()) tallas.add("L");
    if (jTallaXLCheckBox.isSelected()) tallas.add("XL");
    if (jTalla26CheckBox.isSelected()) tallas.add("26");
    if (jTalla28CheckBox.isSelected()) tallas.add("28");
    if (jTalla30CheckBox.isSelected()) tallas.add("30");
    if (jTalla32CheckBox.isSelected()) tallas.add("32");
    if (jTalla34CheckBox.isSelected()) tallas.add("34");
    if (jTalla36CheckBox.isSelected()) tallas.add("36");
    if (jTalla37CheckBox.isSelected()) tallas.add("37");
    if (jTalla38CheckBox.isSelected()) tallas.add("38");
    if (jTalla39CheckBox.isSelected()) tallas.add("39");
    if (jTallar40CheckBo.isSelected()) tallas.add("40");
    if (jTalla41CheckBox.isSelected()) tallas.add("41");
    if (jTallaUnicaCheckBox.isSelected()) tallas.add("Talla Única");
    
    return String.join(", ", tallas);
}

    private void LimpiarProductoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarProductoButtonActionPerformed
        // TODO add your handling code here:
        int respuesta = JOptionPane.showConfirmDialog(this,
        "¿Está seguro de que desea limpiar todos los campos?",
        "Confirmar limpieza",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE);
    
    if (respuesta == JOptionPane.YES_OPTION) {
        limpiarFormulario();
        JOptionPane.showMessageDialog(this,
            "Formulario limpiado correctamente",
            "Información",
            JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_LimpiarProductoButtonActionPerformed

    
    
    private void jSubirImgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubirImgButtonActionPerformed
        try {
        // Primero verificar que la carpeta de imágenes existe
        if (!ConfigImagenes.verificarCarpetaImagenes()) {
            JOptionPane.showMessageDialog(this,
                "No se encontró la carpeta Z-Global-Img.\n" +
                "Por favor, verifique que existe en:\n" +
                ConfigImagenes.obtenerCarpetaImagenes().getAbsolutePath(),
                "Error de Configuración",
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Crear el JFileChooser con filtros de imagen
        JFileChooser fileChooser = new JFileChooser();
        
        // Configurar filtros para tipos de imagen
        FileNameExtensionFilter filtroImagenes = new FileNameExtensionFilter(
            "Archivos de Imagen (*.jpg, *.jpeg, *.png, *.gif, *.bmp)", 
            "jpg", "jpeg", "png", "gif", "bmp"
        );
        fileChooser.setFileFilter(filtroImagenes);
        fileChooser.setAcceptAllFileFilterUsed(false);
        
        // Configurar título del diálogo
        fileChooser.setDialogTitle("Seleccionar imagen del producto");
        
        // Mostrar el diálogo de selección de archivo
        int resultado = fileChooser.showOpenDialog(this);
        
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            
            // Validar que el archivo existe y es legible
            if (!archivoSeleccionado.exists() || !archivoSeleccionado.canRead()) {
                JOptionPane.showMessageDialog(this,
                    "No se puede leer el archivo seleccionado.",
                    "Error de archivo",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Validar el tamaño del archivo (máximo 5MB)
            long tamaño = archivoSeleccionado.length();
            long maxTamaño = 5 * 1024 * 1024; // 5MB en bytes
            
            if (tamaño > maxTamaño) {
                JOptionPane.showMessageDialog(this,
                    "El archivo es demasiado grande. Máximo permitido: 5MB",
                    "Archivo muy grande",
                    JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // Obtener la carpeta de destino
            File carpetaDestino = ConfigImagenes.obtenerCarpetaImagenes();
            
            // Generar nombre único para evitar conflictos
            String extension = obtenerExtension(archivoSeleccionado.getName());
            String nombreArchivo = generarNombreUnico(extension);
            
            // Crear el archivo de destino
            File archivoDestino = new File(carpetaDestino, nombreArchivo);
            
            // Copiar el archivo
            Files.copy(archivoSeleccionado.toPath(), 
                      archivoDestino.toPath(), 
                      StandardCopyOption.REPLACE_EXISTING);
            
            // Guardar la ruta relativa para la base de datos
            imagenUrlSeleccionada = ConfigImagenes.obtenerRutaRelativaBD(nombreArchivo);
            
            // Actualizar la etiqueta para mostrar el nombre
            jLabel4.setText(nombreArchivo);
            jLabel4.setToolTipText("Imagen guardada: " + imagenUrlSeleccionada);
            
            // Mensaje de confirmación
            JOptionPane.showMessageDialog(this,
                "Imagen cargada correctamente:\n" + nombreArchivo,
                "Éxito",
                JOptionPane.INFORMATION_MESSAGE);
                
            // Log de la acción
            System.out.println("=== IMAGEN CARGADA ===");
            System.out.println("Archivo original: " + archivoSeleccionado.getName());
            System.out.println("Nuevo nombre: " + nombreArchivo);
            System.out.println("Carpeta destino: " + carpetaDestino.getAbsolutePath());
            System.out.println("Ruta en BD: " + imagenUrlSeleccionada);
            System.out.println("Archivo guardado en: " + archivoDestino.getAbsolutePath());
            System.out.println("=====================");
            
        } else if (resultado == JFileChooser.CANCEL_OPTION) {
            System.out.println("Selección de imagen cancelada por el usuario");
        }
        
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this,
            "Error al copiar la imagen: " + e.getMessage(),
            "Error de E/S",
            JOptionPane.ERROR_MESSAGE);
        logger.log(java.util.logging.Level.SEVERE, "Error al copiar imagen", e);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this,
            "Error inesperado al procesar la imagen: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
        logger.log(java.util.logging.Level.SEVERE, "Error inesperado al subir imagen", e);
    }
    }//GEN-LAST:event_jSubirImgButtonActionPerformed

    
/**
 * Obtiene la ruta completa de una imagen guardada
 * @param nombreImagen Nombre de la imagen (relativo)
 * @return Ruta completa del archivo de imagen
 */
public static String obtenerRutaCompletaImagen(String nombreImagen) {
    if (nombreImagen == null || nombreImagen.isEmpty()) {
        return "";
    }
    
    // Si ya es una ruta absoluta, la devolvemos tal cual
    if (new File(nombreImagen).isAbsolute()) {
        return nombreImagen;
    }
    
    // Construir la ruta completa
    String rutaProyecto = System.getProperty("user.dir");
    File archivoImagen = new File(rutaProyecto, nombreImagen);
    
    return archivoImagen.getAbsolutePath();
}


    private String obtenerExtension(String nombreArchivo) {
    int ultimoPunto = nombreArchivo.lastIndexOf('.');
    if (ultimoPunto > 0 && ultimoPunto < nombreArchivo.length() - 1) {
        return nombreArchivo.substring(ultimoPunto + 1).toLowerCase();
    }
    return "jpg"; // Extensión por defecto
}

/**
 * Genera un nombre único para el archivo usando timestamp
 * @param extension Extensión del archivo
 * @return Nombre único del archivo
 */
    
    private String generarNombreUnico(String extension) {
    // Usar timestamp y sesión del usuario para generar nombre único
    LocalDateTime ahora = LocalDateTime.now();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss");
    String timestamp = ahora.format(formatter);
    
    String username = SessionManager.getInstance().getUsername();
    username = username.replaceAll("[^a-zA-Z0-9]", ""); // Limpiar caracteres especiales
    
    return String.format("producto_%s_%s.%s", username, timestamp, extension);
}

/**
 * Valida si un archivo es una imagen válida
 * @param archivo Archivo a validar
 * @return true si es una imagen válida, false en caso contrario
 */
private boolean esImagenValida(File archivo) {
    String nombre = archivo.getName().toLowerCase();
    return nombre.endsWith(".jpg") || nombre.endsWith(".jpeg") || 
           nombre.endsWith(".png") || nombre.endsWith(".gif") || 
           nombre.endsWith(".bmp");
}
    
    
    
    /**
 * Verifica si una imagen existe en el sistema
 * @param rutaImagen Ruta relativa de la imagen desde la BD
 * @return true si existe, false en caso contrario
 */
public static boolean existeImagen(String rutaImagen) {
    if (rutaImagen == null || rutaImagen.isEmpty()) {
        return false;
    }
    
    String rutaCompleta = obtenerRutaCompletaImagen(rutaImagen);
    File archivo = new File(rutaCompleta);
    
    return archivo.exists() && archivo.isFile();
}
    
  /**
 * Obtiene un ImageIcon redimensionado de una imagen guardada
 * @param rutaImagen Ruta relativa de la imagen
 * @param ancho Ancho deseado
 * @param alto Alto deseado
 * @return ImageIcon o null si no se encuentra la imagen
 */
public static ImageIcon obtenerImagenEscalada(String rutaImagen, int ancho, int alto) {
    if (!existeImagen(rutaImagen)) {
        return null;
    }
    
    try {
        String rutaCompleta = obtenerRutaCompletaImagen(rutaImagen);
        ImageIcon icon = new ImageIcon(rutaCompleta);
        Image img = icon.getImage();
        Image imgEscalada = img.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
        return new ImageIcon(imgEscalada);
    } catch (Exception e) {
        System.err.println("Error al cargar imagen: " + e.getMessage());
        return null;
    }
}  
    
    private void limpiarFormulario() {
    // Limpiar campos de texto
    jNombreText.setText("");
    jCantidadText.setText("");
    jPrecioText.setText("");
    jDescripcionText.setText("");
    jColorText.setText(""); // Color
    jMaterialText.setText(""); // Material
    jColeccionText.setText(""); // Colección
    
    // Limpiar URL de imagen
    jLabel4.setText("Url");
    jLabel4.setToolTipText(""); // Limpiar tooltip
    imagenUrlSeleccionada = ""; // Resetear la variable de imagen
    
    // Desmarcar todas las categorías
    jBlusasTopsCheckBox1.setSelected(false);
    jPantalonesCheckBox2.setSelected(false);
    jVestidosCheckBox3.setSelected(false);
    jCalzadoCheckBox4.setSelected(false);
    jAccesoriosCheckBox5.setSelected(false);
    
    // Desmarcar todas las tallas
    jTallaXSCheckBox.setSelected(false);
    jTallaSCheckBox.setSelected(false);
    jTallaMCheckBox.setSelected(false);
    jTallaLCheckBox.setSelected(false);
    jTallaXLCheckBox.setSelected(false);
    jTalla26CheckBox.setSelected(false);
    jTalla28CheckBox.setSelected(false);
    jTalla30CheckBox.setSelected(false);
    jTalla32CheckBox.setSelected(false);
    jTalla34CheckBox.setSelected(false);
    jTalla36CheckBox.setSelected(false);
    jTalla37CheckBox.setSelected(false);
    jTalla38CheckBox.setSelected(false);
    jTalla39CheckBox.setSelected(false);
    jTallar40CheckBo.setSelected(false);
    jTalla41CheckBox.setSelected(false);
    jTallaUnicaCheckBox.setSelected(false);
    
    // Enfocar el primer campo
    jNombreText.requestFocus();
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Agregar().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LimpiarProductoButton;
    private javax.swing.JCheckBox jAccesoriosCheckBox5;
    private javax.swing.JButton jActualizarButton;
    private javax.swing.JButton jAgregarButton;
    private javax.swing.JButton jAgrgarProductoButton;
    private javax.swing.JCheckBox jBlusasTopsCheckBox1;
    private javax.swing.JCheckBox jCalzadoCheckBox4;
    private javax.swing.JTextField jCantidadText;
    private javax.swing.JTextField jColeccionText;
    private javax.swing.JTextField jColorText;
    private javax.swing.JTextArea jDescripcionText;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JButton jEliminarButton;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton jLeerButton;
    private javax.swing.JTextField jMaterialText;
    private javax.swing.JTextField jNombreText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JCheckBox jPantalonesCheckBox2;
    private javax.swing.JTextField jPrecioText;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton jSubirImgButton;
    private javax.swing.JCheckBox jTalla26CheckBox;
    private javax.swing.JCheckBox jTalla28CheckBox;
    private javax.swing.JCheckBox jTalla30CheckBox;
    private javax.swing.JCheckBox jTalla32CheckBox;
    private javax.swing.JCheckBox jTalla34CheckBox;
    private javax.swing.JCheckBox jTalla36CheckBox;
    private javax.swing.JCheckBox jTalla37CheckBox;
    private javax.swing.JCheckBox jTalla38CheckBox;
    private javax.swing.JCheckBox jTalla39CheckBox;
    private javax.swing.JCheckBox jTalla41CheckBox;
    private javax.swing.JCheckBox jTallaLCheckBox;
    private javax.swing.JCheckBox jTallaMCheckBox;
    private javax.swing.JCheckBox jTallaSCheckBox;
    private javax.swing.JCheckBox jTallaUnicaCheckBox;
    private javax.swing.JCheckBox jTallaXLCheckBox;
    private javax.swing.JCheckBox jTallaXSCheckBox;
    private javax.swing.JCheckBox jTallar40CheckBo;
    private javax.swing.JButton jUsuarioButton;
    private javax.swing.JCheckBox jVestidosCheckBox3;
    // End of variables declaration//GEN-END:variables
}
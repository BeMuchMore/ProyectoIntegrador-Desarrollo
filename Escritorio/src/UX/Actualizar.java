/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UX;

import UI.Conexion;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.sql.*;
import UI.Conexion;
import UI.SessionManager;
/**
 *
 * @author calam
 */
public class Actualizar extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Actualizar.class.getName());

    /**
     * Creates new form Actualizar
     */
    public Actualizar() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        
     SessionManager session = SessionManager.getInstance();
        this.setTitle("Actualizar Productos - Usuario: " + session.getUsername());
        
        // Log de acceso
        System.out.println("Usuario " + session.getUsername() + " accedi√≥ a Agregar Productos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jUsuarioButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jAgregarButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jEliminarButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jActualizarButton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLeerButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jNombreTextFiel = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCantidadTextFiel = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jBlusasTopsCheckBox1 = new javax.swing.JCheckBox();
        jPantalonesCheckBox2 = new javax.swing.JCheckBox();
        jVestidosCheckBox3 = new javax.swing.JCheckBox();
        jCalzadoCheckBox4 = new javax.swing.JCheckBox();
        jAccesoriosCheckBox5 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jTallaXSCheckBox = new javax.swing.JCheckBox();
        jTallaXLCheckBox = new javax.swing.JCheckBox();
        jTalla32CheckBox = new javax.swing.JCheckBox();
        jTalla38CheckBox = new javax.swing.JCheckBox();
        jTallaUnicaCheckBox = new javax.swing.JCheckBox();
        jTallaSCheckBox = new javax.swing.JCheckBox();
        jTalla26CheckBox = new javax.swing.JCheckBox();
        jTalla34CheckBox = new javax.swing.JCheckBox();
        jTalla39CheckBox = new javax.swing.JCheckBox();
        jTallar40CheckBo = new javax.swing.JCheckBox();
        jTallaMCheckBox = new javax.swing.JCheckBox();
        jTalla28CheckBox = new javax.swing.JCheckBox();
        jTalla36CheckBox = new javax.swing.JCheckBox();
        jTalla37CheckBox = new javax.swing.JCheckBox();
        jTalla41CheckBox = new javax.swing.JCheckBox();
        jTallaLCheckBox = new javax.swing.JCheckBox();
        jTalla30CheckBox = new javax.swing.JCheckBox();
        jPrecioTextFiel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jColorTextField = new javax.swing.JTextField();
        jMaterialTextField = new javax.swing.JTextField();
        jColeccionTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jActualizarProductoButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDescripcionText = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        VistaPreviaImg = new javax.swing.JLabel();
        jBuscarTextFiel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jBuscarButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1067, 536));
        jPanel1.setMinimumSize(new java.awt.Dimension(1067, 536));

        jUsuarioButton.setText("Usuario");
        jUsuarioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUsuarioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jUsuarioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jUsuarioButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel5.setMaximumSize(new java.awt.Dimension(100, 100));

        jAgregarButton.setText("Agregar");
        jAgregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgregarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jAgregarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jAgregarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel6.setMaximumSize(new java.awt.Dimension(100, 100));

        jEliminarButton.setText("Eliminar");
        jEliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jEliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jEliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel7.setMaximumSize(new java.awt.Dimension(100, 100));

        jActualizarButton.setText("Actualizar");
        jActualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualizarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jActualizarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jActualizarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel8.setMaximumSize(new java.awt.Dimension(100, 100));

        jLeerButton.setText("Leer");
        jLeerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLeerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLeerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLeerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(949, 391));
        jPanel4.setMinimumSize(new java.awt.Dimension(949, 391));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel11.setText("Actualizar");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jNombreTextFiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNombreTextFielActionPerformed(evt);
            }
        });
        jPanel4.add(jNombreTextFiel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 229, -1));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Nombre:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Imagen:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Precio:");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, -1, -1));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Categoria:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Cantidad:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, -1, -1));

        jCantidadTextFiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCantidadTextFielActionPerformed(evt);
            }
        });
        jPanel4.add(jCantidadTextFiel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 229, -1));

        jBlusasTopsCheckBox1.setText("Blusas & Tops");
        jBlusasTopsCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlusasTopsCheckBox1ActionPerformed(evt);
            }
        });

        jPantalonesCheckBox2.setText("Pantalones");
        jPantalonesCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPantalonesCheckBox2ActionPerformed(evt);
            }
        });

        jVestidosCheckBox3.setText("Vestidos");
        jVestidosCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVestidosCheckBox3ActionPerformed(evt);
            }
        });

        jCalzadoCheckBox4.setText("Calzado");

        jAccesoriosCheckBox5.setText("Accesorios");
        jAccesoriosCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAccesoriosCheckBox5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCalzadoCheckBox4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBlusasTopsCheckBox1)
                            .addComponent(jPantalonesCheckBox2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jVestidosCheckBox3)
                            .addComponent(jAccesoriosCheckBox5))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBlusasTopsCheckBox1)
                    .addComponent(jAccesoriosCheckBox5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPantalonesCheckBox2)
                    .addComponent(jVestidosCheckBox3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCalzadoCheckBox4)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 240, 230, 90));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Talla:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, -1, -1));

        jTallaXSCheckBox.setText("XS");

        jTallaXLCheckBox.setText("XL");

        jTalla32CheckBox.setText("32");

        jTalla38CheckBox.setText("38");

        jTallaUnicaCheckBox.setText("Talla √önica");

        jTallaSCheckBox.setText("S");

        jTalla26CheckBox.setText("26");
        jTalla26CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTalla26CheckBoxActionPerformed(evt);
            }
        });

        jTalla34CheckBox.setText("34");

        jTalla39CheckBox.setText("39");

        jTallar40CheckBo.setText("40");

        jTallaMCheckBox.setText("M");

        jTalla28CheckBox.setText("28");

        jTalla36CheckBox.setText("36");

        jTalla37CheckBox.setText("37");

        jTalla41CheckBox.setText("41");

        jTallaLCheckBox.setText("L");

        jTalla30CheckBox.setText("30");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTallaXSCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaSCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaMCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaLCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTallaXLCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTalla26CheckBox))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTallaUnicaCheckBox)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTalla28CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla30CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla32CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla34CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla36CheckBox))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jTalla37CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla38CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla39CheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTallar40CheckBo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTalla41CheckBox)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTallaXSCheckBox)
                    .addComponent(jTallaSCheckBox)
                    .addComponent(jTallaMCheckBox)
                    .addComponent(jTallaLCheckBox)
                    .addComponent(jTallaXLCheckBox)
                    .addComponent(jTalla26CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTalla28CheckBox)
                    .addComponent(jTalla30CheckBox)
                    .addComponent(jTalla32CheckBox)
                    .addComponent(jTalla34CheckBox)
                    .addComponent(jTalla36CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTalla37CheckBox)
                    .addComponent(jTalla38CheckBox)
                    .addComponent(jTalla39CheckBox)
                    .addComponent(jTallar40CheckBo)
                    .addComponent(jTalla41CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTallaUnicaCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, 230, 100));

        jPrecioTextFiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPrecioTextFielActionPerformed(evt);
            }
        });
        jPanel4.add(jPrecioTextFiel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 230, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Color:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, -1, -1));

        jColorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jColorTextFieldActionPerformed(evt);
            }
        });
        jPanel4.add(jColorTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 230, -1));

        jMaterialTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMaterialTextFieldActionPerformed(evt);
            }
        });
        jPanel4.add(jMaterialTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 230, -1));

        jColeccionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jColeccionTextFieldActionPerformed(evt);
            }
        });
        jPanel4.add(jColeccionTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 230, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Material:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Coleccion:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jActualizarProductoButton.setText("Actualizar");
        jActualizarProductoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualizarProductoButtonActionPerformed(evt);
            }
        });
        jPanel4.add(jActualizarProductoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 290, 140, 110));

        jDescripcionText.setColumns(20);
        jDescripcionText.setRows(5);
        jScrollPane1.setViewportView(jDescripcionText);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, -1, -1));

        jLabel8.setText("Descripcion");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        jLabel4.setText("El producto es actualizado pero no");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 410, -1, -1));

        jLabel9.setText("todavia no guarda las versiones anteriores");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 430, -1, -1));

        VistaPreviaImg.setText("imagen");
        jPanel4.add(VistaPreviaImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, -1, -1));

        jBuscarTextFiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarTextFielActionPerformed(evt);
            }
        });
        jPanel4.add(jBuscarTextFiel, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 300, -1));
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, -1, -1));

        jBuscarButton.setText("Buscar");
        jBuscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarButtonActionPerformed(evt);
            }
        });
        jPanel4.add(jBuscarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 40, -1, -1));

        jLabel16.setText("puedes buscar por cualquier tipo de referencia que tengas del producto como : id, nombre, color");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, -1, -1));

        jLabel17.setText("Talla, precio, Cantidad, etc.");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAgregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgregarButtonActionPerformed
        // TODO add your handling code here:
        
        if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesi√≥n no v√°lida");
            return;
        }
        
            Agregar temp = new Agregar();
            temp.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_jAgregarButtonActionPerformed

    private void jEliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarButtonActionPerformed
        // TODO add your handling code here:
        
            // TODO add your handling code here:
         if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesi√≥n no v√°lida");
            return;
        }
        
        Eliminar temp = new Eliminar();
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jEliminarButtonActionPerformed

    private void jActualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualizarButtonActionPerformed
        
//        if (!SessionManager.getInstance().isLoggedIn()) {
//            JOptionPane.showMessageDialog(this, "Sesi√≥n no v√°lida");
//            return;
//        }
//        
//        Actualizar temp = new Actualizar();
//        temp.setVisible(true);
//        this.dispose();
    }//GEN-LAST:event_jActualizarButtonActionPerformed

    private void jLeerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLeerButtonActionPerformed
        // TODO add your handling code here:
         if (!SessionManager.getInstance().isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesi√≥n no v√°lida");
            return;
        }
        
        Leer temp = new Leer();
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLeerButtonActionPerformed

    private void jUsuarioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUsuarioButtonActionPerformed
         // TODO add your handling code here:
       SessionManager session = SessionManager.getInstance();
        
        if (!session.isLoggedIn()) {
            JOptionPane.showMessageDialog(this, "Sesi√≥n no v√°lida");
            return;
        }
        
        // Obtener datos de la sesi√≥n
        int userId = session.getUserId();
        String cargo = session.getCargo();
        
        System.out.println("Navegando a Usuario con datos: ID=" + userId + ", Cargo=" + cargo);
        
        Usuario temp = new Usuario(userId, cargo);
        temp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jUsuarioButtonActionPerformed

    private void jNombreTextFielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNombreTextFielActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNombreTextFielActionPerformed

    private void jCantidadTextFielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCantidadTextFielActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCantidadTextFielActionPerformed

    private void jBlusasTopsCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlusasTopsCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBlusasTopsCheckBox1ActionPerformed

    private void jPantalonesCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPantalonesCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPantalonesCheckBox2ActionPerformed

    private void jVestidosCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVestidosCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jVestidosCheckBox3ActionPerformed

    private void jAccesoriosCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAccesoriosCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAccesoriosCheckBox5ActionPerformed

    private void jTalla26CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTalla26CheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTalla26CheckBoxActionPerformed

    private void jPrecioTextFielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPrecioTextFielActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPrecioTextFielActionPerformed

    private void jColorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jColorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jColorTextFieldActionPerformed

    private void jMaterialTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMaterialTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMaterialTextFieldActionPerformed

    private void jColeccionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jColeccionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jColeccionTextFieldActionPerformed

    private void jActualizarProductoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualizarProductoButtonActionPerformed

     if (productoSeleccionadoId == -1) {
        JOptionPane.showMessageDialog(this, "Primero debe buscar y seleccionar un producto para actualizar", 
                                    "Producto no seleccionado", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Validar campos obligatorios
    if (!validarCampos()) {
        return;
    }
    
    // Mostrar confirmaci√≥n
    String nombreProducto = jNombreTextFiel.getText();
    int opcion = JOptionPane.showConfirmDialog(this,
        "¬øEst√° seguro de que desea actualizar el producto: " + nombreProducto + "?",
        "Confirmar Actualizaci√≥n",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE);
    
    if (opcion == JOptionPane.YES_OPTION) {
        if(actualizarProductoConHistorial()){ if (actualizarProducto()) {
            JOptionPane.showMessageDialog(this, "Producto actualizado exitosamente", 
                                        "Actualizaci√≥n Exitosa", JOptionPane.INFORMATION_MESSAGE);
            
            limpiarFormulario();
            productoSeleccionadoId = -1;
        }}
       
    }
      
    }//GEN-LAST:event_jActualizarProductoButtonActionPerformed

    private boolean validarCampos() {
    StringBuilder errores = new StringBuilder();
    
    if (jNombreTextFiel.getText().trim().isEmpty()) {
        errores.append("- El nombre es obligatorio\n");
    }
    
    if (jCantidadTextFiel.getText().trim().isEmpty()) {
        errores.append("- La cantidad es obligatoria\n");
    } else {
        try {
            int cantidad = Integer.parseInt(jCantidadTextFiel.getText().trim());
            if (cantidad < 0) {
                errores.append("- La cantidad debe ser un n√∫mero positivo\n");
            }
        } catch (NumberFormatException e) {
            errores.append("- La cantidad debe ser un n√∫mero v√°lido\n");
        }
    }
    
    if (jPrecioTextFiel.getText().trim().isEmpty()) {
        errores.append("- El precio es obligatorio\n");
    } else {
        try {
            double precio = Double.parseDouble(jPrecioTextFiel.getText().trim());
            if (precio < 0) {
                errores.append("- El precio debe ser un n√∫mero positivo\n");
            }
        } catch (NumberFormatException e) {
            errores.append("- El precio debe ser un n√∫mero v√°lido\n");
        }
    }
    
    // Validar que al menos una categor√≠a est√© seleccionada
    if (!obtenerCategoriaSeleccionada()) {
        errores.append("- Debe seleccionar al menos una categor√≠a\n");
    }
    
    // Validar que al menos una talla est√© seleccionada
    if (obtenerTallaSeleccionada().isEmpty()) {
        errores.append("- Debe seleccionar al menos una talla\n");
    }
    
    if (errores.length() > 0) {
        JOptionPane.showMessageDialog(this, 
            "Por favor corrija los siguientes errores:\n\n" + errores.toString(), 
            "Errores de Validaci√≥n", 
            JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    return true;
}

// M√©todo para obtener la categor√≠a seleccionada
private boolean obtenerCategoriaSeleccionada() {
    return jBlusasTopsCheckBox1.isSelected() || 
           jPantalonesCheckBox2.isSelected() || 
           jVestidosCheckBox3.isSelected() || 
           jCalzadoCheckBox4.isSelected() || 
           jAccesoriosCheckBox5.isSelected();
}

// M√©todo para obtener las categor√≠as seleccionadas como string
private String obtenerCategoriasString() {
    StringBuilder categorias = new StringBuilder();
    
    if (jBlusasTopsCheckBox1.isSelected()) {
        categorias.append("Blusas & Tops,");
    }
    if (jPantalonesCheckBox2.isSelected()) {
        categorias.append("Pantalones,");
    }
    if (jVestidosCheckBox3.isSelected()) {
        categorias.append("Vestidos,");
    }
    if (jCalzadoCheckBox4.isSelected()) {
        categorias.append("Calzado,");
    }
    if (jAccesoriosCheckBox5.isSelected()) {
        categorias.append("Accesorios,");
    }
    
    // Eliminar la √∫ltima coma
    if (categorias.length() > 0) {
        categorias.setLength(categorias.length() - 1);
    }
    
    return categorias.toString();
}

// M√©todo para obtener la talla seleccionada
private String obtenerTallaSeleccionada() {
    StringBuilder tallas = new StringBuilder();
    
    if (jTallaXSCheckBox.isSelected()) tallas.append("XS,");
    if (jTallaSCheckBox.isSelected()) tallas.append("S,");
    if (jTallaMCheckBox.isSelected()) tallas.append("M,");
    if (jTallaLCheckBox.isSelected()) tallas.append("L,");
    if (jTallaXLCheckBox.isSelected()) tallas.append("XL,");
    if (jTalla26CheckBox.isSelected()) tallas.append("26,");
    if (jTalla28CheckBox.isSelected()) tallas.append("28,");
    if (jTalla30CheckBox.isSelected()) tallas.append("30,");
    if (jTalla32CheckBox.isSelected()) tallas.append("32,");
    if (jTalla34CheckBox.isSelected()) tallas.append("34,");
    if (jTalla36CheckBox.isSelected()) tallas.append("36,");
    if (jTalla37CheckBox.isSelected()) tallas.append("37,");
    if (jTalla38CheckBox.isSelected()) tallas.append("38,");
    if (jTalla39CheckBox.isSelected()) tallas.append("39,");
    if (jTallar40CheckBo.isSelected()) tallas.append("40,");
    if (jTalla41CheckBox.isSelected()) tallas.append("41,");
    if (jTallaUnicaCheckBox.isSelected()) tallas.append("Talla √önica,");
    
    // Eliminar la √∫ltima coma
    if (tallas.length() > 0) {
        tallas.setLength(tallas.length() - 1);
    }
    
    return tallas.toString();
}

// M√©todo principal para actualizar el producto en la base de datos
private boolean actualizarProducto() {
    String sql = """
        UPDATE tb_productos SET 
        Nombre = ?, 
        Cantidad = ?, 
        Precio = ?, 
        Categorias = ?, 
        Talla = ?, 
        Color = ?, 
        Material = ?, 
        Colecci√≥n = ?, 
        Descripcion = ?
        WHERE id = ?
        """;
    
    try (Connection conn = Conexion.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {
        
        // Establecer par√°metros
        pstmt.setString(1, jNombreTextFiel.getText().trim());
        pstmt.setInt(2, Integer.parseInt(jCantidadTextFiel.getText().trim()));
        pstmt.setDouble(3, Double.parseDouble(jPrecioTextFiel.getText().trim()));
        pstmt.setString(4, obtenerCategoriasString());
        pstmt.setString(5, obtenerTallaSeleccionada());
        pstmt.setString(6, jColorTextField.getText().trim());
        pstmt.setString(7, jMaterialTextField.getText().trim());
        pstmt.setString(8, jColeccionTextField.getText().trim());
        pstmt.setString(9, jDescripcionText.getText().trim());
        pstmt.setInt(10, productoSeleccionadoId);
        
        int filasActualizadas = pstmt.executeUpdate();
        
        if (filasActualizadas > 0) {
            // Log de la actualizaci√≥n (opcional)
            System.out.println("Producto actualizado: ID " + productoSeleccionadoId + 
                             ", Nombre: " + jNombreTextFiel.getText().trim());
            return true;
        } else {
            JOptionPane.showMessageDialog(this, 
                "No se pudo actualizar el producto. Verifique que el producto a√∫n existe.", 
                "Error de Actualizaci√≥n", 
                JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
    } catch (SQLException e) {
        logger.log(java.util.logging.Level.SEVERE, "Error al actualizar producto", e);
        JOptionPane.showMessageDialog(this, 
            "Error al actualizar el producto: " + e.getMessage(), 
            "Error de Base de Datos", 
            JOptionPane.ERROR_MESSAGE);
        return false;
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, 
            "Error en el formato de n√∫meros. Verifique cantidad y precio.", 
            "Error de Formato", 
            JOptionPane.ERROR_MESSAGE);
        return false;
    }
}

// M√©todo para limpiar el formulario despu√©s de actualizar
private void limpiarFormulario() {
    jNombreTextFiel.setText("");
    jCantidadTextFiel.setText("");
    jPrecioTextFiel.setText("");
    jColorTextField.setText("");
    jMaterialTextField.setText("");
    jColeccionTextField.setText("");
    jDescripcionText.setText("");
    jBuscarTextFiel.setText("");
    VistaPreviaImg.setText("imagen");
    limpiarCheckboxes();
}

// M√©todo opcional: Actualizaci√≥n con historial de versiones (para futuras implementaciones)
private boolean actualizarProductoConHistorial() {
    // Primero guardar la versi√≥n actual en una tabla de historial
    String sqlHistorial = """
        INSERT INTO tb_productos_historial 
        (producto_id, nombre_anterior, cantidad_anterior, precio_anterior, 
         categorias_anterior, talla_anterior, color_anterior, material_anterior, 
         coleccion_anterior, descripcion_anterior, fecha_cambio)
        SELECT id, Nombre, Cantidad, Precio, Categorias, Talla, Color, Material, 
               Colecci√≥n, Descripcion, NOW()
        FROM tb_productos WHERE id = ?
        """;
    
    try (Connection conn = Conexion.getConnection()) {
        conn.setAutoCommit(false); // Iniciar transacci√≥n
        
        // Guardar historial
        try (PreparedStatement pstmtHistorial = conn.prepareStatement(sqlHistorial)) {
            pstmtHistorial.setInt(1, productoSeleccionadoId);
            pstmtHistorial.executeUpdate();
        }
        
        // Actualizar producto
        String sqlUpdate = """
            UPDATE tb_productos SET 
            Nombre = ?, Cantidad = ?, Precio = ?, Categorias = ?, 
            Talla = ?, Color = ?, Material = ?, Colecci√≥n = ?, Descripcion = ?
            WHERE id = ?
            """;
        
        try (PreparedStatement pstmtUpdate = conn.prepareStatement(sqlUpdate)) {
            pstmtUpdate.setString(1, jNombreTextFiel.getText().trim());
            pstmtUpdate.setInt(2, Integer.parseInt(jCantidadTextFiel.getText().trim()));
            pstmtUpdate.setDouble(3, Double.parseDouble(jPrecioTextFiel.getText().trim()));
            pstmtUpdate.setString(4, obtenerCategoriasString());
            pstmtUpdate.setString(5, obtenerTallaSeleccionada());
            pstmtUpdate.setString(6, jColorTextField.getText().trim());
            pstmtUpdate.setString(7, jMaterialTextField.getText().trim());
            pstmtUpdate.setString(8, jColeccionTextField.getText().trim());
            pstmtUpdate.setString(9, jDescripcionText.getText().trim());
            pstmtUpdate.setInt(10, productoSeleccionadoId);
            
            int filasActualizadas = pstmtUpdate.executeUpdate();
            
            if (filasActualizadas > 0) {
                conn.commit(); // Confirmar transacci√≥n
                return true;
            } else {
                conn.rollback(); // Revertir transacci√≥n
                return false;
            }
        }
        
    } catch (SQLException e) {
        logger.log(java.util.logging.Level.SEVERE, "Error al actualizar producto con historial", e);
        JOptionPane.showMessageDialog(this, 
            "Error al actualizar el producto: " + e.getMessage(), 
            "Error de Base de Datos", 
            JOptionPane.ERROR_MESSAGE);
        return false;
    }
}
    
    private void jBuscarTextFielActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarTextFielActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBuscarTextFielActionPerformed

    private void jBuscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarButtonActionPerformed
        // TODO add your handling code here:
        String busqueda = jBuscarTextFiel.getText().trim();

        if (busqueda.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un t√©rmino de b√∫squeda",
                "B√∫squeda vac√≠a", JOptionPane.WARNING_MESSAGE);
            return;
        }

        List<Producto> productos = buscarProductos(busqueda);

        if (productos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No se encontraron productos que coincidan con la b√∫squeda",
                "Sin resultados", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Crear ventana de resultados
        mostrarResultadosBusqueda(productos);

    }//GEN-LAST:event_jBuscarButtonActionPerformed

    private List<Producto> buscarProductos(String termino) {
    List<Producto> productos = new ArrayList<>();
    String sql = """
        SELECT * FROM tb_productos 
        WHERE LOWER(Nombre) LIKE LOWER(?) 
        OR LOWER(Color) LIKE LOWER(?) 
        OR LOWER(Categorias) LIKE LOWER(?) 
        OR LOWER(Talla) LIKE LOWER(?) 
        OR LOWER(Material) LIKE LOWER(?) 
        OR LOWER(Colecci√≥n) LIKE LOWER(?) 
        OR LOWER(Descripcion) LIKE LOWER(?) 
        OR Precio = ? 
        OR Cantidad = ? 
        OR id = ?
        """;
    
    try (Connection conn = Conexion.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql)) {
        
        String terminoBusqueda = "%" + termino + "%";
        pstmt.setString(1, terminoBusqueda);
        pstmt.setString(2, terminoBusqueda);
        pstmt.setString(3, terminoBusqueda);
        pstmt.setString(4, terminoBusqueda);
        pstmt.setString(5, terminoBusqueda);
        pstmt.setString(6, terminoBusqueda);
        pstmt.setString(7, terminoBusqueda);
        
        // Para b√∫squedas num√©ricas
        try {
            double precio = Double.parseDouble(termino);
            pstmt.setDouble(8, precio);
        } catch (NumberFormatException e) {
            pstmt.setDouble(8, -1);
        }
        
        try {
            int cantidad = Integer.parseInt(termino);
            pstmt.setInt(9, cantidad);
        } catch (NumberFormatException e) {
            pstmt.setInt(9, -1);
        }
        
        try {
            int id = Integer.parseInt(termino);
            pstmt.setInt(10, id);
        } catch (NumberFormatException e) {
            pstmt.setInt(10, -1);
        }
        
        ResultSet rs = pstmt.executeQuery();
        
        while (rs.next()) {
            Producto producto = new Producto(
                rs.getInt("id"),
                rs.getString("Nombre"),
                rs.getString("ImgUrl"),
                rs.getDouble("Precio"),
                rs.getInt("Cantidad"),
                rs.getString("Categorias"),
                rs.getString("Talla"),
                rs.getString("Color"),
                rs.getString("Material"),
                rs.getString("Colecci√≥n"),
                rs.getString("Descripcion")
            );
            productos.add(producto);
        }
        
    } catch (SQLException e) {
        logger.log(java.util.logging.Level.SEVERE, "Error al buscar productos", e);
        JOptionPane.showMessageDialog(this, "Error al buscar productos: " + e.getMessage(), 
                                    "Error de Base de Datos", JOptionPane.ERROR_MESSAGE);
    }
    
    return productos;
}

// M√©todo para mostrar los resultados de b√∫squeda
private void mostrarResultadosBusqueda(List<Producto> productos) {
    JDialog dialogoResultados = new JDialog(this, "Resultados de B√∫squeda", true);
    dialogoResultados.setSize(600, 400);
    dialogoResultados.setLocationRelativeTo(this);
    
    DefaultListModel<Producto> modelo = new DefaultListModel<>();
    for (Producto producto : productos) {
        modelo.addElement(producto);
    }
    
    JList<Producto> lista = new JList<>(modelo);
    lista.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    
    JScrollPane scrollPane = new JScrollPane(lista);
    
    JPanel panelBotones = new JPanel();
    JButton btnSeleccionar = new JButton("Seleccionar");
    JButton btnCancelar = new JButton("Cancelar");
    
    btnSeleccionar.addActionListener(e -> {
        Producto seleccionado = lista.getSelectedValue();
        if (seleccionado != null) {
            cargarProductoEnFormulario(seleccionado);
            dialogoResultados.dispose();
        } else {
            JOptionPane.showMessageDialog(dialogoResultados, "Seleccione un producto", 
                                        "Selecci√≥n requerida", JOptionPane.WARNING_MESSAGE);
        }
    });
    
   
    
    btnCancelar.addActionListener(e -> dialogoResultados.dispose());
    
    panelBotones.add(btnSeleccionar);
    
    panelBotones.add(btnCancelar);
    
    dialogoResultados.setLayout(new java.awt.BorderLayout());
    dialogoResultados.add(scrollPane, java.awt.BorderLayout.CENTER);
    dialogoResultados.add(panelBotones, java.awt.BorderLayout.SOUTH);
    
    dialogoResultados.setVisible(true);
}

// M√©todo para cargar el producto seleccionado en el formulario
private void cargarProductoEnFormulario(Producto producto) {
    jNombreTextFiel.setText(producto.getNombre());
    jCantidadTextFiel.setText(String.valueOf(producto.getCantidad()));
    jPrecioTextFiel.setText(String.valueOf(producto.getPrecio()));
    jColorTextField.setText(producto.getColor());
    jMaterialTextField.setText(producto.getMaterial());
    jColeccionTextField.setText(producto.getColeccion());
    jDescripcionText.setText(producto.getDescripcion());
    
    // Limpiar checkboxes
    limpiarCheckboxes();
    
    // Seleccionar categor√≠a
    seleccionarCategoria(producto.getCategoria());
    
    // Seleccionar talla
    seleccionarTalla(producto.getTalla());
    
    // Guardar el ID del producto para la eliminaci√≥n
    this.productoSeleccionadoId = producto.getId();
    
    // Cargar imagen si existe
    if (producto.getImagen() != null && !producto.getImagen().isEmpty()) {
        VistaPreviaImg.setText("Imagen: " + producto.getImagen());
    }
}

// Variable para guardar el ID del producto seleccionado
private int productoSeleccionadoId = -1;

// M√©todo para limpiar checkboxes
private void limpiarCheckboxes() {
    // Categor√≠as
    jBlusasTopsCheckBox1.setSelected(false);
    jPantalonesCheckBox2.setSelected(false);
    jVestidosCheckBox3.setSelected(false);
    jCalzadoCheckBox4.setSelected(false);
    jAccesoriosCheckBox5.setSelected(false);
    
    // Tallas
    jTallaXSCheckBox.setSelected(false);
    jTallaSCheckBox.setSelected(false);
    jTallaMCheckBox.setSelected(false);
    jTallaLCheckBox.setSelected(false);
    jTallaXLCheckBox.setSelected(false);
    jTalla26CheckBox.setSelected(false);
    jTalla28CheckBox.setSelected(false);
    jTalla30CheckBox.setSelected(false);
    jTalla32CheckBox.setSelected(false);
    jTalla34CheckBox.setSelected(false);
    jTalla36CheckBox.setSelected(false);
    jTalla37CheckBox.setSelected(false);
    jTalla38CheckBox.setSelected(false);
    jTalla39CheckBox.setSelected(false);
    jTallar40CheckBo.setSelected(false);
    jTalla41CheckBox.setSelected(false);
    jTallaUnicaCheckBox.setSelected(false);
}

// M√©todo para seleccionar categor√≠a
private void seleccionarCategoria(String categoria) {
    if (categoria == null) return;
    
    switch (categoria.toLowerCase()) {
        case "blusas & tops":
        case "blusas":
        case "tops":
            jBlusasTopsCheckBox1.setSelected(true);
            break;
        case "pantalones":
            jPantalonesCheckBox2.setSelected(true);
            break;
        case "vestidos":
            jVestidosCheckBox3.setSelected(true);
            break;
        case "calzado":
            jCalzadoCheckBox4.setSelected(true);
            break;
        case "accesorios":
            jAccesoriosCheckBox5.setSelected(true);
            break;
    }
}

// M√©todo para seleccionar talla
private void seleccionarTalla(String talla) {
    if (talla == null) return;
    
    switch (talla.toUpperCase()) {
        case "XS":
            jTallaXSCheckBox.setSelected(true);
            break;
        case "S":
            jTallaSCheckBox.setSelected(true);
            break;
        case "M":
            jTallaMCheckBox.setSelected(true);
            break;
        case "L":
            jTallaLCheckBox.setSelected(true);
            break;
        case "XL":
            jTallaXLCheckBox.setSelected(true);
            break;
        case "26":
            jTalla26CheckBox.setSelected(true);
            break;
        case "28":
            jTalla28CheckBox.setSelected(true);
            break;
        case "30":
            jTalla30CheckBox.setSelected(true);
            break;
        case "32":
            jTalla32CheckBox.setSelected(true);
            break;
        case "34":
            jTalla34CheckBox.setSelected(true);
            break;
        case "36":
            jTalla36CheckBox.setSelected(true);
            break;
        case "37":
            jTalla37CheckBox.setSelected(true);
            break;
        case "38":
            jTalla38CheckBox.setSelected(true);
            break;
        case "39":
            jTalla39CheckBox.setSelected(true);
            break;
        case "40":
            jTallar40CheckBo.setSelected(true);
            break;
        case "41":
            jTalla41CheckBox.setSelected(true);
            break;
        case "TALLA √öNICA":
        case "√öNICA":
            jTallaUnicaCheckBox.setSelected(true);
            break;
    }
}
    
    private boolean testearConexion() {
    if (Conexion.testConnection()) {
        JOptionPane.showMessageDialog(this, 
            "Conexi√≥n a la base de datos establecida correctamente", 
            "Conexi√≥n Exitosa", 
            JOptionPane.INFORMATION_MESSAGE);
        return true;
    } else {
        JOptionPane.showMessageDialog(this, 
            "No se pudo conectar a la base de datos.\nVerifica que MySQL est√© ejecut√°ndose y que la base de datos 'basedatos' exista.", 
            "Error de Conexi√≥n", 
            JOptionPane.ERROR_MESSAGE);
        return false;
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Actualizar().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel VistaPreviaImg;
    private javax.swing.JCheckBox jAccesoriosCheckBox5;
    private javax.swing.JButton jActualizarButton;
    private javax.swing.JButton jActualizarProductoButton;
    private javax.swing.JButton jAgregarButton;
    private javax.swing.JCheckBox jBlusasTopsCheckBox1;
    private javax.swing.JButton jBuscarButton;
    private javax.swing.JTextField jBuscarTextFiel;
    private javax.swing.JCheckBox jCalzadoCheckBox4;
    private javax.swing.JTextField jCantidadTextFiel;
    private javax.swing.JTextField jColeccionTextField;
    private javax.swing.JTextField jColorTextField;
    private javax.swing.JTextArea jDescripcionText;
    private javax.swing.JButton jEliminarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jLeerButton;
    private javax.swing.JTextField jMaterialTextField;
    private javax.swing.JTextField jNombreTextFiel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JCheckBox jPantalonesCheckBox2;
    private javax.swing.JTextField jPrecioTextFiel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jTalla26CheckBox;
    private javax.swing.JCheckBox jTalla28CheckBox;
    private javax.swing.JCheckBox jTalla30CheckBox;
    private javax.swing.JCheckBox jTalla32CheckBox;
    private javax.swing.JCheckBox jTalla34CheckBox;
    private javax.swing.JCheckBox jTalla36CheckBox;
    private javax.swing.JCheckBox jTalla37CheckBox;
    private javax.swing.JCheckBox jTalla38CheckBox;
    private javax.swing.JCheckBox jTalla39CheckBox;
    private javax.swing.JCheckBox jTalla41CheckBox;
    private javax.swing.JCheckBox jTallaLCheckBox;
    private javax.swing.JCheckBox jTallaMCheckBox;
    private javax.swing.JCheckBox jTallaSCheckBox;
    private javax.swing.JCheckBox jTallaUnicaCheckBox;
    private javax.swing.JCheckBox jTallaXLCheckBox;
    private javax.swing.JCheckBox jTallaXSCheckBox;
    private javax.swing.JCheckBox jTallar40CheckBo;
    private javax.swing.JButton jUsuarioButton;
    private javax.swing.JCheckBox jVestidosCheckBox3;
    // End of variables declaration//GEN-END:variables
}
